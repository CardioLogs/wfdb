#LaTeX2HTML Version 96.1 : dot.latex2html-init
#
# This version has been customized for use in translating the WAVE User's
# Guide.
#
### Command Line Argument Defaults #######################################

$MAX_SPLIT_DEPTH = 8;	# Stop making separate files at this depth

$MAX_LINK_DEPTH = 4;    # Stop showing child nodes at this depth   

$NOLATEX = 0;           # 1 = do not pass unknown environments to Latex

$EXTERNAL_IMAGES = 0;   # 1 = leave the images outside the document 

$ASCII_MODE = 0;        # 1 = do not use any icons or internal images

# 1 =  use links to external postscript images rather than inlined GIF's.
$PS_IMAGES = 0;

$TITLE = $default_title;      # The default is "No Title" 

$DESTDIR = '';         # Put the result in this directory 

# When this is set, the generated HTML files will be placed in the 
# current directory. If set to 0 the default behaviour is to create (or reuse)
# another file directory.
$NO_SUBDIR = 0;


# Supply your own string if you don't like the default <Name> <Date>
#$ADDRESS = "<I>$address_data[0] <BR>\n$address_data[1]</I>";
$ADDRESS = "<I><A HREF=\"mailto:george\@hstbme.mit.edu\">George B. Moody (<tt>george\@hstbme.mit.edu</tt>)</A><BR>\n$address_data[1]</I>";

$NO_NAVIGATION = 0;	# 1 = do not put a navigation panel at the top of each page

# Put navigation links at the top of each  page.  If  the page  exceeds
# $WORDS_IN_PAGE  number of words then put one at the bottom of the page.
$AUTO_NAVIGATION = 1;

# Put a link to the index page in  the  navigation  panel
$INDEX_IN_NAVIGATION = 1;

# Put a link to the table of contents  in  the  navigation  panel
$CONTENTS_IN_NAVIGATION = 1;

# Put a link to the next logical page  in  the  navigation  panel
$NEXT_PAGE_IN_NAVIGATION = 1;

# Put a link to the previous logical page  in  the  navigation  panel
$PREVIOUS_PAGE_IN_NAVIGATION = 1;

$INFO = 0;              # 0 = do not make a "About this document..." section 

# Reuse images generated during previous runs
$REUSE = 2;

# When this is 1, the section numbers are shown. The section numbers should 
# then match those that would have bee produced by LaTeX.
# The correct section numbers are obtained from the $FILE.aux file generated 
# by LaTeX.
# Hiding the seciton numbers encourages use of particular sections 
# as standalone documents. In this case the cross reference to a section 
# is shown using the default symbol rather than the section number.
$SHOW_SECTION_NUMBERS = 0;

### Other global variables ###############################################
$CHILDLINE = "<BR> <HR>\n";

# This is the line width measured in pixels and it is used to right justify
# equations and equation arrays; 
$LINE_WIDTH = 500;		

# Used in conjunction with AUTO_NAVIGATION
$WORDS_IN_PAGE = 300;	

# Affects ONLY the way accents are processed 
$default_language = 'english';	

# The value of this variable determines how many words to use in each 
# title that is added to the navigation panel (see below)
# 
$WORDS_IN_NAVIGATION_PANEL_TITLES = 7;

# This number will determine the size of the equations, special characters,
# and anything which will be converted into an inlined image
# *except* "image generating environments" such as "figure", "table" 
# or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$MATH_SCALE_FACTOR = 1.6;

# This number will determine the size of 
# image generating environments such as "figure", "table" or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$FIGURE_SCALE_FACTOR = 2;


#  If this is set then intermediate files are left for later inspection.
#  This includes $$_images.tex and $$_images.log created during image
#  conversion.
#  Caution: Intermediate files can be *enormous*.
$DEBUG = 0;

#  If both of the following two variables are set then the "Up" button
#  of the navigation panel in the first node/page of a converted document
#  will point to $EXTERNAL_UP_LINK. $EXTERNAL_UP_TITLE should be set
#  to some text which describes this external link.
$EXTERNAL_UP_LINK = "../index.html";
$EXTERNAL_UP_TITLE = "Catalog of documents";

# If this is set to 0 then any inlined images generated from "figure" 
# environments will NOT be transparent.
$TRANSPARENT_FIGURES = 0;

# If this is set then the resulting HTML will look marginally better if viewed 
# with Netscape.
$NETSCAPE_HTML = 1;

# By default, the version of HTML produced is 3.0
$HTML_VERSION = '3.0';

# Valid paper sizes are "letter", "legal", "a4","a3","a2" and "a0"
# Paper sizes has no effect other than in the time it takes to create inlined
# images and in whether large images can be created at all ie
#  - larger paper sizes *MAY* help with large image problems 
#  - smaller paper sizes are quicker to handle
$PAPERSIZE = "a4";

# Replace "english" with another language in order to tell LaTeX2HTML that you 
# want some generated section titles (eg "Table of Contents" or "References")
# to appear in a different language. Currently only "english" and "french"
# is supported but it is very easy to add your own. See the example in the
# file "latex2html.config" 
$TITLES_LANGUAGE = "english";

### Navigation Panel ##########################################################
#
# The navigation panel is constructed out of buttons and section titles.
# These can be configured in any combination with arbitrary text and 
# HTML tags interspersed between them. 
# The buttons available are:
# $PREVIOUS - points to the previous section
# $UP  - points up to the "parent" section
# $NEXT - points to the next section
# $NEXT_GROUP - points to the next "group" section
# $PREVIOUS_GROUP - points to the previous "group" section
# $CONTENTS - points to the contents page if there is one
# $INDEX - points to the index page if there is one
#
# If the corresponding section exists the button will contain an
# active link to that section. If the corresponding section does
# not exist the button will be inactive.
#
# Also for each of the $PREVIOUS $UP $NEXT $NEXT_GROUP and $PREVIOUS_GROUP
# buttons there are equivalent $PREVIOUS_TITLE, $UP_TITLE, etc variables
# which contain the titles of their corresponding sections. 
# Each title is empty if there is no corresponding section.
#
# The subroutine below constructs the navigation panel in each page.
# Feel free to mix and match buttons, titles, your own text, your logos,
# and arbitrary HTML (the "." is the Perl concatenation operator).
sub navigation_panel {

    #  Start with a horizontal rule (3-d dividing line)
    "<BR> <HR>".			
    
    # Now add a few buttons with a space between them
    "$NEXT $UP $PREVIOUS $CONTENTS $INDEX $CUSTOM_BUTTONS" .
    
    "<BR>\n" .		# Line break
	
    # If ``next'' section exists, add its title to the navigation panel
    ($NEXT_TITLE ? "<B> Next:</B> $NEXT_TITLE\n" : undef) . 
    
    # Similarly with the ``up'' title ...
    ($UP_TITLE ? "<B>Up:</B> $UP_TITLE\n" : undef) . 
 
    # ... and the ``previous'' title
    ($PREVIOUS_TITLE ? "<B> Previous:</B> $PREVIOUS_TITLE\n" : undef) .
   
    #  Line Break, horizontal rule (3-d dividing line) and new paragraph  
    "<BR> <HR> <P>\n"		
}

### Adding commands to be ignored ########################################

# Add LaTeX commands to be ignored.
# Each command should be on a separate line and have the format:
#  <cmd_name>#{}# []# {}# [] etc. 
# {} marks a compulsory argument and [] an  optional one.
# Note that some commands may have arguments which should be left as
# text even though the command should be ignored (e.g. mbox, center, etc)

&ignore_commands( <<_IGNORED_CMDS_);
htmlrule # [] # \$_ = join('',"<BR> <HR>",\$_) 
mathversion # {} 
underline # {} # \$_ = join('',"<U>",\$_,"</U>")
centerline # {} # \$_ = join('',"<P CENTER>", \$_, "</P>")
latexhtml# {}
latex# {}
html
lrule # {} 
scrollmode
savebox# {}# []# [] 
center
xspace
fboxsep
cornersize # {}
textrm
_IGNORED_CMDS_

### Icons ################################################################

# Icon names and real icon files. 

%icons = 
(
 'cross_ref_visible_mark' ,'cross_ref.gif',
 'anchor_mark' ,'&#160;',	
 'anchor_invisible_mark' ,'&#160;', 
 'up_visible_mark' ,'up.gif', 
 'next_visible_mark' ,'next_group_motif.gif', 
 'previous_visible_mark' ,'previous_group_motif.gif',
 'next_page_visible_mark' ,'next.gif',
 'previous_page_visible_mark' ,'previous.gif',
 'contents_visible_mark' ,'contents.gif',
 'index_visible_mark' ,'index.gif',
 'footnote_mark' ,'foot.gif',
 'up_inactive_visible_mark' ,'up_gr.gif', 
 'next_inactive_visible_mark' ,'next_group_motif_gr.gif', 
 'previous_inactive_visible_mark' ,'previous_group_motif_gr.gif',
 'next_page_inactive_visible_mark' ,'next_gr.gif',
 'previous_page_inactive_visible_mark' ,'prev_gr.gif',
 'change_begin_visible_mark','change_begin.gif',
 'change_end_visible_mark','change_end.gif',
 'change_delete_visible_mark','change_delete.gif'
 );

### Adding commands to be processed by TeX ###############################

# Commands which need to be passed, ALONG WITH THEIR ARGUMENTS, to TeX.
# The syntax is the same as that for ignore_commands above.

&process_commands_in_tex (<<_RAW_ARG_CMDS_);
fbox # {}
framebox # [] # [] # {}
ovalbox # {}
Ovalbox # {}
keycap # {}
button # {}
menubutton # {}
amenubutton # {}
WAVE
_RAW_ARG_CMDS_

1;      # This must be the last line
