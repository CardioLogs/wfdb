\" file: appguide.int		G. Moody	July 1989
\"				Last revised:  31 July 2002
\" Table of contents and introduction to the WFDB Applications Guide.
\"
\" To print this document using GNU groff, use:
\"     tbl appguide.int | groff -mgs
\" To print this using standard UNIX troff and Adobe TranScript software, use:
\"     tbl appguide.int | ptroff -ms
\"
\" Note that the table of contents must be updated manually if material is
\" added to or removed from the Guide.  The page numbers were checked against
\" groff output of the remainder of the Guide;  if you format your Guide using
\" another version of troff, your page numbers may differ.
\"
\" See the Makefile in this directory for details.
\"
.af PN i
.EH ''''
.EF ''''
.bp 2
.OH 'Contents'WFDB Applications Guide'Contents'
.OF 'WFDB VERSION'LONGDATE'\\\\n(PN'
.bp 3
.EH 'Contents'WFDB Applications Guide'Contents'
.EF '\\\\n(PN'LONGDATE'WFDB VERSION'
.ce 999
.ps 16
\fBTable of Contents\fP
.ce 0
.ps 10
.vs 12
.TS
center;
l l r.

\fBIntroduction\fR		v
\fBFrequently Asked Questions\fR		vii

\fBSection 1: Applications\fR
a2m, ad2m, ahaconvert,	converting between MIT and AHA DB formats	1
    m2a, md2a
ann2rr, rr2ann	convert annotation files to interval lists and vice versa	4
bxb	ANSI/AAMI-standard beat-by-beat annotation comparator	6
calsig	calibrate signals of a DB record	8
coherence	estimate coherence and cross-spectrum of two time series	10
dfa	detrended fluctuation analysis	11
ecgeval	generate and run ECG analyzer evaluation script	13
edf2mit	converting from EDF to MIT format	14
epic	ANSI/AAMI-standard episode-by-episode annotation comparator	15
fft	fast Fourier transform	17
fir	general-purpose FIR filter for WFDB records	19
hrfft, hrlomb, hrmem,	calculate and plot heart rate power spectra	21
    hrplot
ihr	calculate instantaneous heart rate	23
log10	calculate common logarithms of two-column data	25
lomb	estimate power spectrum using the Lomb periodogram method	26
memse	estimate power spectrum using maximum entropy (all poles)	27
	    method
mfilt	general-purpose median filter for WFDB records	29
mrgann	merge annotation files	30
mxm	ANSI/AAMI-standard measurement-by-measurement comparator	32
nst	noise stress test for ECG analysis programs	34
plot2d, plot3d	make 2-D or 3-D plots from text files of data, using \fBgnuplot\fR	37
plotstm	produce scatter plot of ST measurement errors on a PostScript	39
	    device
plt	make 2-D plots	40
pschart	produce annotated `chart recordings' on a PostScript device	46
psfd	produce annotated `full-disclosure' plots on a PostScript device	50
rdann	read a WFDB annotation file	54
rdsamp	read WFDB signal files	56
rxr	ANSI/AAMI-standard run-by-run annotation comparator	57
sampfreq	show sampling frequency for a record	59
sample	digitize and replay analog signals (MS-DOS only)	60
setwfdb, cshsetwfdb	set WFDB environment variables	64
sigamp	measure signal amplitudes of a WFDB record	66
skewedit	edit skew fields of header file(s)	67
snip	copy an excerpt of a WFDB record	68
sortann	rearrange annotations in canonical order	69
sqrs, sqrs125	single-channel QRS detector	71
sumann	summarize the contents of a WFDB annotation file	73
sumstats	derive aggregate statistics from bxb, rxr, etc., line-format output	74
tach	heart rate tachometer	75
view, vsetup	WFDB browser for MS-DOS	77
wave, gtkwave	waveform analyzer, viewer, and editor	80
wfdbcat	copy WFDB records to standard output	90
wfdbcollate	collate WFDB records into a multi-segment record	91
wfdb-config	print WFDB library version and configuration info	93
wfdbdesc	read signal specifications	94
wfdbwhich	find a WFDB file and print its pathname	95
wrann	write a WFDB annotation file	96
wrsamp	write WFDB signal files	97
wview	WFDB browser for MS Windows	99
xform	sampling frequency, amplitude, and format conversion	103
	    for WFDB records

\fBSection 3: WFDB libraries\fP
wfdb	Waveform Database library	105
wfdbf	Waveform Database library wrappers for Fortran	108

\fBSection 5: WFDB file formats\fP
annot	WFDB annotation file formats	111
header	WFDB header file format	113
signal	WFDB signal file formats	120
wfdbcal	WFDB calibration file format	122


\fBAppendices\fP
	\fIInstalling the WFDB Software Package\fP	125
	\fIEvaluating ECG Analyzers\fP	129
.TE

.LP
.OH 'Introduction'WFDB Applications Guide'Introduction'
.EH 'Introduction'WFDB Applications Guide'Introduction'

.bp
.ce 1
\fBINTRODUCTION\fP
.PP
Most of this guide consists of UNIX \fBman\fP pages that describe the
applications included in the WFDB (Waveform Database) Software
Package (and related software from PhysioToolkit).  This introduction
contains important information about how to interpret the material in
the main sections of the guide, and about common conventions for using
all of the WFDB applications that are not described in the main sections.
The FAQ that follows this introduction contains additional information
that will be particularly helpful if you are using MS-Windows (but it
may be of interest even if you are not).

.ce 1
\fBUsing this Guide\fP

.PP
The organization follows the traditional arrangement of the UNIX Reference
Manual:  section 1 contains programs, section 3 contains libraries, and
section 5 contains file formats.  In the UNIX Reference Manual, sections
2 and 4 are reserved for system calls and device interfaces respectively;
these sections do not exist in this guide.  Following convention, a
citation such as \fBrdann\fR(1) refers to the page titled \fBrdann\fR in
section 1 of this guide.
.PP
A \fBman\fR "page" may span more than one physical page, although most
do not.  Each \fBman\fR page in section 1 of this guide documents one or
more applications, as indicated in the \fBNAME\fR section at the top.
The \fBSYNOPSIS\fR appears next;  it illustrates the form of the
command line needed to run the application.  In the synopsis, \fBboldface\fR
indicates text to be typed as is, and \fIitalics\fR indicate replaceable
arguments;  brackets ([], which are \fInot\fR to be typed) surround
arguments that may be omitted, and ellipses (...) follow arguments that
can be repeated.  The \fBDESCRIPTION\fR sections are intentionally terse;
this is a reference manual and not a tutorial introduction to the software
described within.  In those cases for which relevant tutorial material
exists elsewhere, references appear in the \fBSEE ALSO\fP sections of each
\fBman\fP page.  A unique feature of this guide is the \fBSOURCE\fR section
at the end of each page, which provides a URL where you may find the current
version of the source(s) for each application.
.PP
On each page, the footer indicates the date when that page was last revised,
and (in most cases) the version of the WFDB Software Package that was current
at that time.  An old date and version number do not mean that the page is
out-of-date;  rather they mean that the material described on that page
remains current.
.PP
Under GNU/Linux or Unix, if the WFDB Software Package has been installed
on your system, you can also access the information contained in the
main sections of this guide using \fBman\fR and related programs.  For
example, to see the manual page for \fBrdsamp\fR, run the command
.br
	\fBman rdsamp\fR
.br
(This also works under MS-Windows if you have installed the
Cygwin package, which includes the \fBman\fR utility for formatting
and reading manual pages.)  In some cases you may need to add
\fB/usr/local/man\fR to your \fBMANPATH\fR environment variable, in
order to make these pages accessible to \fBman\fR.
.PP
An HTML version of this guide is also available;  point your Web browser to
\fBhttp://www.physionet.org/physiotools/wag/\fR to read it.

.ce 1
\fBUsing WFDB Applications\fP

.PP
If you have not used any of these programs before, you may need to set up
your environment properly so that WFDB applications can find their
input files.  See \fBsetwfdb\fR(1) in this guide for information about
doing this; a more detailed discussion may be found in the first chapter
of the \fIWFDB Programmer's Guide\fP, in the section about the database path.
.PP
Certain types of command-line arguments are used by many of the applications
described in this guide.  These include:
.IP \fIrecord\fP
Where this appears, substitute the name of a WFDB record.  \fBA record
name is \fInot\fB a file name!\fR The first part of the name of a .hea
file is the name of the record to which the .hea file belongs; so the
record name corresponding to `100.hea' is `100'.  For example, MIT-BIH
Arrhythmia Database record names are 3-digit numbers, AHA Database
record names are 4-digit numbers, and European ST-T Database record
names begin with lowercase `e', followed by a 4-digit number.  Record
names may contain letters, digits, and underscores.  Case is significant in
record names that contain letters, even in environments such as
MS-Windows for which case translation is normally performed by the
operating system on file names; thus `e0104' is the name of a record
found in the European ST-T Database, whereas `E0104' is not.  Once
again: a record name is \fBnot\fP a file name; record names never
include an extension (.hea, .dat, etc.).
.IP
Wherever a record name can be supplied to a WFDB application, you may include
path information if necessary.  For example, if the WFDB path includes the
current directory, and if the current directory includes a subdirectory named
`my_records', and that directory contains a record named `record_23', you
can supply `my_records/record_23' as a \fIrecord\fR argument.  See the \fIWFDB
Programmer's Guide\fP for further details on record names.
.IP
Each PhysioBank database directory includes a text file named \fBRECORDS\fR,
which lists the record names for all records in that directory.

.IP \fIannotator\fP
Where this appears, substitute an annotator name.  \fBAnnotator names
are \fInot\fB file names!\fR The suffix (extension) of the name of an
annotation file is the annotator name for that file; so, for example,
the annotator name for `e0104.atr' is `atr'.  The special annotator
name `atr' is used to name the set of \fIreference annotations\fP
supplied by the database developers.  Other annotation sets have
annotator names that may contain letters, digits, and underscores, as
for record names.
.IP
Each PhysioBank database directory includes a text file named \fBANNOTATORS\fR,
which lists the annotator names for all annotation files in that directory.

.IP \fItime\fP
Where this appears, substitute a string in \fIstandard time format\fP.
\fITime\fP arguments generally specify elapsed times from the beginning
of the record (for exceptions to this rule, see the section on the
\fBstrtim\fR function in the \fIWFDB Programmer's Guide\fP).  Examples
of standard time format:
.TS
center;
l l.
2:14.875	2 minutes + 14.875 seconds
143	143 seconds (2 minutes + 23 seconds)
4:02:01	4 hours + 2 minutes + 1 second
4:2:1	same as above
s12345	12345 sample intervals
e	time of the end of the record
.TE

.IP \fIsignal\fP
Where this appears, substitute a signal number.  Signal numbers are integers;
the first signal in each record is signal 0.  In printed documentation for
the databases, signals always appear with signal 0 at the top, signal 1
beneath, etc.

.IP \fIsignal-list\fP
Where this (or `\fIsignal ...\fP') appears, you may specify more than one
signal in any desired order;  separate the signal numbers using spaces.
Unless otherwise noted, a signal may appear more than once, or not at all,
in a signal list. In most cases, the end of the signal list is unambiguous
(since signal numbers are never negative, an option argument beginning
with '-' is a reliable indicator). In unusual cases, you may need to arrange
options so that the signal list is at the end of the command, or so that it
is followed by an argument that cannot be interpreted as a signal number. 

.OH 'FAQ'WFDB Applications Guide'FAQ'
.EH 'FAQ'WFDB Applications Guide'FAQ'
.bp
.ce 2
\fBFREQUENTLY ASKED QUESTIONS\fP
.br
\fB(and Frequently Exclaimed Exclamations)\fP

.LP
\fBI double-clicked on the program icon, and nothing happens!\fR
.br
\fBI typed the program name in the 'Run...' dialog, and nothing happens!\fR
.PP
Don't do this!
.PP
With few exceptions, PhysioToolkit applications run in \fBtext mode\fR
(i.e., they do not include a graphical user interface).
These programs are intended to be run within a terminal emulator
using a command-line interface.  In most cases, if you attempt to run them by
clicking on their icons or names, or by entering the program name in the
MS-Windows \fBRun...\fR dialog box, these programs will open a DOS box, print a
usage summary, and exit, usually much too fast for you to read anything.
.PP
By far the best way to use these programs under MS-Windows is to install a
Unix-compatible terminal emulator and shell in which to run them.  The best of
these is also free; if you have not already done so, download and install the
Cygwin software package from \fBhttp://www.cygwin.com/\fP.  This package
includes \fBbash\fR, the GNU Bourne Again Shell and a terminal emulator in
which to run it.  After a standard installation of Cygwin, you can launch a
terminal emulator and \fBbash\fR by clicking on the Cygwin icon that will have
been installed on your desktop.
.PP
If you do not wish to use Cygwin, it is possible to run these applications
within a DOS box, but there are many limitations of \fBcommand.com\fR that may
prove frustrating.  In particular, \fBcommand.com\fR supports a relatively
small space for environment variables that is not secure against buffer
overruns, and has idiosyncratic filename globbing behavior.

.LP
\fBHow can I save the output of ... in a file?\fR
.br
\fBHow can one program read another's output?\fR

.PP
If you are running programs from a command prompt (by typing commands into a
terminal emulator window or an MS-DOS box), these things can be done easily.

.PP
If you have ever used GNU/Linux, Unix, or MS-DOS, you may have captured the
output of a program by \fIredirecting\fR it to a file, like this:
.br
	\fBfoo >bar\fR
.br
The > operator redirects \fBfoo\fR's standard output (which would normally
appear on-screen) into a file named \fBbar\fR. If \fBbar\fR exists already, its
contents are replaced. If you wish to append \fBfoo\fR's output to whatever is
already contained in \fBbar\fR, use a command such as this instead:
.br
	\fBfoo >>bar\fR
.br
There is an analogous operator that arranges for a program's standard input
(which would normally be read from whatever you type on the keyboard) to be
read from a file instead:
.br
	\fBbaz <bar\fR
.br
Here, the < operator arranges for \fBbaz\fR to read its input from a file
named \fBbar\fR. If \fBbar\fR was created by \fBfoo\fR, then this command
allows \fBbaz\fR to read \fBfoo\fR's output.

.PP
You can combine input and output redirection in a single command using the pipe
(|) operator:
.br
	\fBfoo | baz\fR
.br
This command runs \fBfoo\fR and sends its standard output directly to
\fBbaz\fR, without requiring an intermediate file. True multitasking operating
systems such as Unix and GNU/Linux allow both programs to run (apparently)
simultaneously; under MS-DOS or MS-Windows, the first program runs to
completion before the second one begins execution.

.PP
You can use these techniques whenever you run programs from a command prompt,
whether those programs are among those available here or obtained from some
other source. You can use the same techniques with programs you write yourself;
the only requirement is that your programs must read from the standard input
and write to the standard output (i.e., they must not attempt to bypass the
standard input/output mechanism by reading directly from the keyboard or
writing directly to the screen).

.PP
These operators (>, >>, <, and |) are supported by all shells (command
interpreters) under Unix, GNU/Linux, and MS-DOS (including those that run
within MS-DOS boxes or other types of terminal emulators under MS-Windows). For
further information, please refer to the documentation for your shell or
command interpreter.

.PP
\fBWhere else can I find answers to my questions about this software?\fR

.PP
If you haven't read the introduction to this guide yet, do so now.  It answers
many frequently asked questions by describing the common behavior of many of
the WFDB applications.  It also describes the typographic and organizational
conventions used in the remainder of this guide.

.PP
Many more questions are asked and answered in the PhysioNet FAQ
(http://www.physionet.org/faq.shtml).
